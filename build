#!/usr/bin/env node
var exec = require("child_process").exec;
var fs = require("fs");

var getopt = require("node-getopt");
var browserify = require("browserify");
var exorcist = require("exorcist");
var Gaze = require("gaze").Gaze;

var inputFile = "./src/index.js";

var buildDir = "./app/scripts/";
var outFile = "main.js";
var mapExt = ".map";

var opts = getopt.create([
	["r", "run=SCRIPT", "run script after build"],
	["w", "watch", "watch source files"],
	["h", "help", "show this help"]
])
.bindHelp()
.parseSystem()
.options;

var out = process.stdout;

var build = function()
{
	out.write("Starting build... ");

	var bundle = browserify({ debug: true })
		.add(inputFile)
		.bundle();

	var buildOut = fs.createWriteStream(buildDir+outFile, "utf8")
	buildOut.on("finish", function()
	{
		out.write("build complete!\n");

		if(opts.run)
		{
			console.log("Running `"+opts.run+"`");
			exec(opts.run);
		}
	});

	//bundle.pipe(exorcist(buildDir+outFile+mapExt)).pipe(buildOut);
	bundle.pipe(buildOut);
};

if(opts.watch)
{
	console.log("Watching source files...");

	var gaze = new Gaze("src/*.js");
	gaze.on("all", build);
}

build();
