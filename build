#!/usr/bin/env node
var exec = require("child_process").exec;
var fs = require("fs");
var Gaze = require("gaze").Gaze;
var getopt = require("node-getopt");
var shell = require("shelljs");

var opts = getopt.create([
	["r", "run=SCRIPT", "run script after build"],
	["V", "views", "run (and watch if \"-w\") build-views script"],
	["w", "watch", "watch source files"],
	["h", "help", "show this help"]
])
.bindHelp()
.parseSystem()
.options;

var out = process.stdout;

var build = function()
{
	runBuildScript("build-src");

	if(opts.run)
	{
		out.write("Running `"+opts.run+"`...");
		shell.exec(opts.run);
		out.write(" Done!\n");
	}
};

var runBuildScript = function(scriptName)
{
	out.write("Running \""+scriptName+"\"... ");

	var result = shell.exec("./"+scriptName).code;

	if(result == 0)
		out.write("Complete!\n");
	else
	{
		out.write("failed.\n");
		throw new Error("`"+scriptName+"` failed and returned: "+result);
	}
}

if(opts.watch)
{
	console.log("Watching source files...");

	var gaze = new Gaze("src/*.js");
	gaze.on("all", build);
}

build();
